//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/HSFramework/Input/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""GameInput"",
            ""id"": ""cf2c4716-b386-44df-8aa1-d4f178843e32"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""f2c5ffc1-e029-4b34-a4b5-b3a37b017a1a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraLook"",
                    ""type"": ""Value"",
                    ""id"": ""0f458df4-34c5-4f42-944e-920d7c9e5acf"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftShift"",
                    ""type"": ""Button"",
                    ""id"": ""64975ad2-313c-42d3-a918-e09d75222e6c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseLeft"",
                    ""type"": ""Button"",
                    ""id"": ""25d0162b-c3b1-4113-8e51-8928c9e74620"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseRight"",
                    ""type"": ""Button"",
                    ""id"": ""206ebc11-3526-4d70-9392-33453d4c7466"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KeyOne"",
                    ""type"": ""Button"",
                    ""id"": ""d69852f4-6bd3-4d13-8893-2d5cd2f880c2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KeyTwo"",
                    ""type"": ""Button"",
                    ""id"": ""615f2ca0-a18d-444f-862a-2de5bcd1835f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KeyThree"",
                    ""type"": ""Button"",
                    ""id"": ""7befb25f-6c57-4713-928b-01fcd9a6db3b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KeyFour"",
                    ""type"": ""Button"",
                    ""id"": ""465cd2d3-0309-4192-b55b-8aecb87576b3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""C"",
                    ""type"": ""Button"",
                    ""id"": ""82cd8233-ae2d-4e13-8c34-6e3439c0144c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""E"",
                    ""type"": ""Button"",
                    ""id"": ""4b914b10-3a79-4c71-8aeb-c6e36f125a25"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""F"",
                    ""type"": ""Button"",
                    ""id"": ""1779e35e-cdfe-4253-8a64-aad87fac9a50"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""G"",
                    ""type"": ""Button"",
                    ""id"": ""15007945-c042-48b0-b7fc-d2cdd603cb73"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Q"",
                    ""type"": ""Button"",
                    ""id"": ""2fa5cc7d-9677-4649-88d1-695865e8019e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Z"",
                    ""type"": ""Button"",
                    ""id"": ""1bebb768-c608-4e2f-81fb-c2ded6274580"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Space"",
                    ""type"": ""Button"",
                    ""id"": ""b10e1d3f-2957-4f7c-8b7d-4b418308dbc0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Quit"",
                    ""type"": ""Button"",
                    ""id"": ""f33ab4f1-1921-43b2-bbd1-02fb86e8936c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Enter"",
                    ""type"": ""Button"",
                    ""id"": ""5a923448-2431-4793-8970-8fb72c3b4b1e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LetfAlt"",
                    ""type"": ""Button"",
                    ""id"": ""26da4fc1-785d-42d1-b55a-2d02add2d067"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KeyEsc"",
                    ""type"": ""Button"",
                    ""id"": ""4146bf7d-96f3-4a1d-8642-41cda15cd406"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AnyKey"",
                    ""type"": ""Button"",
                    ""id"": ""6fe22e67-e748-476a-941f-49bd389ada9e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Tab"",
                    ""type"": ""Button"",
                    ""id"": ""717e37a7-d4ae-4cce-adbe-ac1a3406fb4e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Caps"",
                    ""type"": ""Button"",
                    ""id"": ""d8cf703d-c5bd-4f2f-b6cd-e5c0441f9d52"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""wasd"",
                    ""id"": ""fadc26c0-b598-48c4-a2ed-d9a1cd93beb5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""254ae6ad-77e0-4e7b-beff-b115bd111a66"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5a544a5c-f698-4122-a35d-7eb977e76d93"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""64858f6c-cb47-4640-a577-651f637d5bf7"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""af4294df-2ec0-45e0-9b6f-889c2ac600d6"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""eec0b46b-06fc-4a53-bb59-198bdda13ece"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0.15,y=0.15)"",
                    ""groups"": """",
                    ""action"": ""CameraLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""631bcf74-49d6-4e72-bc15-f140ceddfe68"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftShift"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f501986-49e2-4367-9c9d-20116b1e2075"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c22b51d-c662-4205-8ec1-82a4ae5793de"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""44ebe68e-dbd6-4bac-9779-61dcb2e81e1f"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""E"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de6c0fd2-be90-45dd-b61b-dcbd3ab365aa"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Quit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d77916b1-8859-4826-b034-41a015ed0c25"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Enter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3da953c3-a8f4-4f75-9f37-ec15ec95a89e"",
                    ""path"": ""<Keyboard>/leftAlt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LetfAlt"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bc81e988-2d2f-4145-ac69-9bac62915882"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyEsc"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6ba826c9-60eb-4373-8cee-8523c672e805"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyFour"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cdc445b1-650b-434b-a533-a2a512b8529b"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyOne"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d439dc5-7347-47d7-bbc2-9b66279a2a68"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyTwo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""430428b2-fe22-4617-a497-f0408cae7abd"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyThree"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d45741dd-c76b-4d2c-8623-abd0af346526"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Space"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fbbe2152-8f5b-45bd-bcf7-de640e48a504"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""F"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fb443539-de40-45f3-80e8-316c3b031591"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""G"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""097e8bd2-797e-4942-8f96-c3d4de9170f7"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""C"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d6c60285-2625-420c-bff5-91d68846df33"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Q"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5153b7dc-fd5c-4c9a-b7ad-4d642e575c2b"",
                    ""path"": ""<Keyboard>/anyKey"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f497fcf5-9e8b-4089-b38d-d2f598d22c8f"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6ea4a53c-7977-4b5f-8c37-6b0b250e2f2a"",
                    ""path"": ""<Keyboard>/capsLock"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Caps"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2dbe7ede-ef5d-4273-89da-81c8acd774dc"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Z"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UIInput"",
            ""id"": ""5b732d53-b905-47bc-8a83-0312b910587c"",
            ""actions"": [
                {
                    ""name"": ""KeyEsc"",
                    ""type"": ""Button"",
                    ""id"": ""c09c6716-80c0-4c34-a74a-9a052c4984f6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KeyEnter"",
                    ""type"": ""Button"",
                    ""id"": ""79b8535f-aff9-476b-8a68-9544a975befe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""dbefd47a-e0db-4aa0-b932-41dcd8b0459e"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyEsc"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fb8bbcc4-7b58-4620-9c70-30ed84d7bfd8"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyEnter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // GameInput
        m_GameInput = asset.FindActionMap("GameInput", throwIfNotFound: true);
        m_GameInput_Movement = m_GameInput.FindAction("Movement", throwIfNotFound: true);
        m_GameInput_CameraLook = m_GameInput.FindAction("CameraLook", throwIfNotFound: true);
        m_GameInput_LeftShift = m_GameInput.FindAction("LeftShift", throwIfNotFound: true);
        m_GameInput_MouseLeft = m_GameInput.FindAction("MouseLeft", throwIfNotFound: true);
        m_GameInput_MouseRight = m_GameInput.FindAction("MouseRight", throwIfNotFound: true);
        m_GameInput_KeyOne = m_GameInput.FindAction("KeyOne", throwIfNotFound: true);
        m_GameInput_KeyTwo = m_GameInput.FindAction("KeyTwo", throwIfNotFound: true);
        m_GameInput_KeyThree = m_GameInput.FindAction("KeyThree", throwIfNotFound: true);
        m_GameInput_KeyFour = m_GameInput.FindAction("KeyFour", throwIfNotFound: true);
        m_GameInput_C = m_GameInput.FindAction("C", throwIfNotFound: true);
        m_GameInput_E = m_GameInput.FindAction("E", throwIfNotFound: true);
        m_GameInput_F = m_GameInput.FindAction("F", throwIfNotFound: true);
        m_GameInput_G = m_GameInput.FindAction("G", throwIfNotFound: true);
        m_GameInput_Q = m_GameInput.FindAction("Q", throwIfNotFound: true);
        m_GameInput_Z = m_GameInput.FindAction("Z", throwIfNotFound: true);
        m_GameInput_Space = m_GameInput.FindAction("Space", throwIfNotFound: true);
        m_GameInput_Quit = m_GameInput.FindAction("Quit", throwIfNotFound: true);
        m_GameInput_Enter = m_GameInput.FindAction("Enter", throwIfNotFound: true);
        m_GameInput_LetfAlt = m_GameInput.FindAction("LetfAlt", throwIfNotFound: true);
        m_GameInput_KeyEsc = m_GameInput.FindAction("KeyEsc", throwIfNotFound: true);
        m_GameInput_AnyKey = m_GameInput.FindAction("AnyKey", throwIfNotFound: true);
        m_GameInput_Tab = m_GameInput.FindAction("Tab", throwIfNotFound: true);
        m_GameInput_Caps = m_GameInput.FindAction("Caps", throwIfNotFound: true);
        // UIInput
        m_UIInput = asset.FindActionMap("UIInput", throwIfNotFound: true);
        m_UIInput_KeyEsc = m_UIInput.FindAction("KeyEsc", throwIfNotFound: true);
        m_UIInput_KeyEnter = m_UIInput.FindAction("KeyEnter", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // GameInput
    private readonly InputActionMap m_GameInput;
    private IGameInputActions m_GameInputActionsCallbackInterface;
    private readonly InputAction m_GameInput_Movement;
    private readonly InputAction m_GameInput_CameraLook;
    private readonly InputAction m_GameInput_LeftShift;
    private readonly InputAction m_GameInput_MouseLeft;
    private readonly InputAction m_GameInput_MouseRight;
    private readonly InputAction m_GameInput_KeyOne;
    private readonly InputAction m_GameInput_KeyTwo;
    private readonly InputAction m_GameInput_KeyThree;
    private readonly InputAction m_GameInput_KeyFour;
    private readonly InputAction m_GameInput_C;
    private readonly InputAction m_GameInput_E;
    private readonly InputAction m_GameInput_F;
    private readonly InputAction m_GameInput_G;
    private readonly InputAction m_GameInput_Q;
    private readonly InputAction m_GameInput_Z;
    private readonly InputAction m_GameInput_Space;
    private readonly InputAction m_GameInput_Quit;
    private readonly InputAction m_GameInput_Enter;
    private readonly InputAction m_GameInput_LetfAlt;
    private readonly InputAction m_GameInput_KeyEsc;
    private readonly InputAction m_GameInput_AnyKey;
    private readonly InputAction m_GameInput_Tab;
    private readonly InputAction m_GameInput_Caps;
    public struct GameInputActions
    {
        private @InputActions m_Wrapper;
        public GameInputActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_GameInput_Movement;
        public InputAction @CameraLook => m_Wrapper.m_GameInput_CameraLook;
        public InputAction @LeftShift => m_Wrapper.m_GameInput_LeftShift;
        public InputAction @MouseLeft => m_Wrapper.m_GameInput_MouseLeft;
        public InputAction @MouseRight => m_Wrapper.m_GameInput_MouseRight;
        public InputAction @KeyOne => m_Wrapper.m_GameInput_KeyOne;
        public InputAction @KeyTwo => m_Wrapper.m_GameInput_KeyTwo;
        public InputAction @KeyThree => m_Wrapper.m_GameInput_KeyThree;
        public InputAction @KeyFour => m_Wrapper.m_GameInput_KeyFour;
        public InputAction @C => m_Wrapper.m_GameInput_C;
        public InputAction @E => m_Wrapper.m_GameInput_E;
        public InputAction @F => m_Wrapper.m_GameInput_F;
        public InputAction @G => m_Wrapper.m_GameInput_G;
        public InputAction @Q => m_Wrapper.m_GameInput_Q;
        public InputAction @Z => m_Wrapper.m_GameInput_Z;
        public InputAction @Space => m_Wrapper.m_GameInput_Space;
        public InputAction @Quit => m_Wrapper.m_GameInput_Quit;
        public InputAction @Enter => m_Wrapper.m_GameInput_Enter;
        public InputAction @LetfAlt => m_Wrapper.m_GameInput_LetfAlt;
        public InputAction @KeyEsc => m_Wrapper.m_GameInput_KeyEsc;
        public InputAction @AnyKey => m_Wrapper.m_GameInput_AnyKey;
        public InputAction @Tab => m_Wrapper.m_GameInput_Tab;
        public InputAction @Caps => m_Wrapper.m_GameInput_Caps;
        public InputActionMap Get() { return m_Wrapper.m_GameInput; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameInputActions set) { return set.Get(); }
        public void SetCallbacks(IGameInputActions instance)
        {
            if (m_Wrapper.m_GameInputActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnMovement;
                @CameraLook.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnCameraLook;
                @CameraLook.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnCameraLook;
                @CameraLook.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnCameraLook;
                @LeftShift.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnLeftShift;
                @LeftShift.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnLeftShift;
                @LeftShift.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnLeftShift;
                @MouseLeft.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnMouseLeft;
                @MouseLeft.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnMouseLeft;
                @MouseLeft.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnMouseLeft;
                @MouseRight.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnMouseRight;
                @MouseRight.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnMouseRight;
                @MouseRight.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnMouseRight;
                @KeyOne.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnKeyOne;
                @KeyOne.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnKeyOne;
                @KeyOne.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnKeyOne;
                @KeyTwo.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnKeyTwo;
                @KeyTwo.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnKeyTwo;
                @KeyTwo.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnKeyTwo;
                @KeyThree.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnKeyThree;
                @KeyThree.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnKeyThree;
                @KeyThree.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnKeyThree;
                @KeyFour.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnKeyFour;
                @KeyFour.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnKeyFour;
                @KeyFour.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnKeyFour;
                @C.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnC;
                @C.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnC;
                @C.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnC;
                @E.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnE;
                @E.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnE;
                @E.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnE;
                @F.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnF;
                @F.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnF;
                @F.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnF;
                @G.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnG;
                @G.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnG;
                @G.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnG;
                @Q.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnQ;
                @Q.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnQ;
                @Q.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnQ;
                @Z.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnZ;
                @Z.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnZ;
                @Z.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnZ;
                @Space.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnSpace;
                @Space.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnSpace;
                @Space.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnSpace;
                @Quit.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnQuit;
                @Quit.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnQuit;
                @Quit.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnQuit;
                @Enter.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnEnter;
                @Enter.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnEnter;
                @Enter.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnEnter;
                @LetfAlt.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnLetfAlt;
                @LetfAlt.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnLetfAlt;
                @LetfAlt.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnLetfAlt;
                @KeyEsc.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnKeyEsc;
                @KeyEsc.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnKeyEsc;
                @KeyEsc.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnKeyEsc;
                @AnyKey.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnAnyKey;
                @AnyKey.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnAnyKey;
                @AnyKey.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnAnyKey;
                @Tab.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnTab;
                @Tab.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnTab;
                @Tab.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnTab;
                @Caps.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnCaps;
                @Caps.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnCaps;
                @Caps.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnCaps;
            }
            m_Wrapper.m_GameInputActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @CameraLook.started += instance.OnCameraLook;
                @CameraLook.performed += instance.OnCameraLook;
                @CameraLook.canceled += instance.OnCameraLook;
                @LeftShift.started += instance.OnLeftShift;
                @LeftShift.performed += instance.OnLeftShift;
                @LeftShift.canceled += instance.OnLeftShift;
                @MouseLeft.started += instance.OnMouseLeft;
                @MouseLeft.performed += instance.OnMouseLeft;
                @MouseLeft.canceled += instance.OnMouseLeft;
                @MouseRight.started += instance.OnMouseRight;
                @MouseRight.performed += instance.OnMouseRight;
                @MouseRight.canceled += instance.OnMouseRight;
                @KeyOne.started += instance.OnKeyOne;
                @KeyOne.performed += instance.OnKeyOne;
                @KeyOne.canceled += instance.OnKeyOne;
                @KeyTwo.started += instance.OnKeyTwo;
                @KeyTwo.performed += instance.OnKeyTwo;
                @KeyTwo.canceled += instance.OnKeyTwo;
                @KeyThree.started += instance.OnKeyThree;
                @KeyThree.performed += instance.OnKeyThree;
                @KeyThree.canceled += instance.OnKeyThree;
                @KeyFour.started += instance.OnKeyFour;
                @KeyFour.performed += instance.OnKeyFour;
                @KeyFour.canceled += instance.OnKeyFour;
                @C.started += instance.OnC;
                @C.performed += instance.OnC;
                @C.canceled += instance.OnC;
                @E.started += instance.OnE;
                @E.performed += instance.OnE;
                @E.canceled += instance.OnE;
                @F.started += instance.OnF;
                @F.performed += instance.OnF;
                @F.canceled += instance.OnF;
                @G.started += instance.OnG;
                @G.performed += instance.OnG;
                @G.canceled += instance.OnG;
                @Q.started += instance.OnQ;
                @Q.performed += instance.OnQ;
                @Q.canceled += instance.OnQ;
                @Z.started += instance.OnZ;
                @Z.performed += instance.OnZ;
                @Z.canceled += instance.OnZ;
                @Space.started += instance.OnSpace;
                @Space.performed += instance.OnSpace;
                @Space.canceled += instance.OnSpace;
                @Quit.started += instance.OnQuit;
                @Quit.performed += instance.OnQuit;
                @Quit.canceled += instance.OnQuit;
                @Enter.started += instance.OnEnter;
                @Enter.performed += instance.OnEnter;
                @Enter.canceled += instance.OnEnter;
                @LetfAlt.started += instance.OnLetfAlt;
                @LetfAlt.performed += instance.OnLetfAlt;
                @LetfAlt.canceled += instance.OnLetfAlt;
                @KeyEsc.started += instance.OnKeyEsc;
                @KeyEsc.performed += instance.OnKeyEsc;
                @KeyEsc.canceled += instance.OnKeyEsc;
                @AnyKey.started += instance.OnAnyKey;
                @AnyKey.performed += instance.OnAnyKey;
                @AnyKey.canceled += instance.OnAnyKey;
                @Tab.started += instance.OnTab;
                @Tab.performed += instance.OnTab;
                @Tab.canceled += instance.OnTab;
                @Caps.started += instance.OnCaps;
                @Caps.performed += instance.OnCaps;
                @Caps.canceled += instance.OnCaps;
            }
        }
    }
    public GameInputActions @GameInput => new GameInputActions(this);

    // UIInput
    private readonly InputActionMap m_UIInput;
    private IUIInputActions m_UIInputActionsCallbackInterface;
    private readonly InputAction m_UIInput_KeyEsc;
    private readonly InputAction m_UIInput_KeyEnter;
    public struct UIInputActions
    {
        private @InputActions m_Wrapper;
        public UIInputActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @KeyEsc => m_Wrapper.m_UIInput_KeyEsc;
        public InputAction @KeyEnter => m_Wrapper.m_UIInput_KeyEnter;
        public InputActionMap Get() { return m_Wrapper.m_UIInput; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIInputActions set) { return set.Get(); }
        public void SetCallbacks(IUIInputActions instance)
        {
            if (m_Wrapper.m_UIInputActionsCallbackInterface != null)
            {
                @KeyEsc.started -= m_Wrapper.m_UIInputActionsCallbackInterface.OnKeyEsc;
                @KeyEsc.performed -= m_Wrapper.m_UIInputActionsCallbackInterface.OnKeyEsc;
                @KeyEsc.canceled -= m_Wrapper.m_UIInputActionsCallbackInterface.OnKeyEsc;
                @KeyEnter.started -= m_Wrapper.m_UIInputActionsCallbackInterface.OnKeyEnter;
                @KeyEnter.performed -= m_Wrapper.m_UIInputActionsCallbackInterface.OnKeyEnter;
                @KeyEnter.canceled -= m_Wrapper.m_UIInputActionsCallbackInterface.OnKeyEnter;
            }
            m_Wrapper.m_UIInputActionsCallbackInterface = instance;
            if (instance != null)
            {
                @KeyEsc.started += instance.OnKeyEsc;
                @KeyEsc.performed += instance.OnKeyEsc;
                @KeyEsc.canceled += instance.OnKeyEsc;
                @KeyEnter.started += instance.OnKeyEnter;
                @KeyEnter.performed += instance.OnKeyEnter;
                @KeyEnter.canceled += instance.OnKeyEnter;
            }
        }
    }
    public UIInputActions @UIInput => new UIInputActions(this);
    public interface IGameInputActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnCameraLook(InputAction.CallbackContext context);
        void OnLeftShift(InputAction.CallbackContext context);
        void OnMouseLeft(InputAction.CallbackContext context);
        void OnMouseRight(InputAction.CallbackContext context);
        void OnKeyOne(InputAction.CallbackContext context);
        void OnKeyTwo(InputAction.CallbackContext context);
        void OnKeyThree(InputAction.CallbackContext context);
        void OnKeyFour(InputAction.CallbackContext context);
        void OnC(InputAction.CallbackContext context);
        void OnE(InputAction.CallbackContext context);
        void OnF(InputAction.CallbackContext context);
        void OnG(InputAction.CallbackContext context);
        void OnQ(InputAction.CallbackContext context);
        void OnZ(InputAction.CallbackContext context);
        void OnSpace(InputAction.CallbackContext context);
        void OnQuit(InputAction.CallbackContext context);
        void OnEnter(InputAction.CallbackContext context);
        void OnLetfAlt(InputAction.CallbackContext context);
        void OnKeyEsc(InputAction.CallbackContext context);
        void OnAnyKey(InputAction.CallbackContext context);
        void OnTab(InputAction.CallbackContext context);
        void OnCaps(InputAction.CallbackContext context);
    }
    public interface IUIInputActions
    {
        void OnKeyEsc(InputAction.CallbackContext context);
        void OnKeyEnter(InputAction.CallbackContext context);
    }
}

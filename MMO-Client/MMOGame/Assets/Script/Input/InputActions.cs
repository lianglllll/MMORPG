//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Script/Input/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""GameInput"",
            ""id"": ""cf2c4716-b386-44df-8aa1-d4f178843e32"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""f2c5ffc1-e029-4b34-a4b5-b3a37b017a1a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraLook"",
                    ""type"": ""Value"",
                    ""id"": ""0f458df4-34c5-4f42-944e-920d7c9e5acf"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""64975ad2-313c-42d3-a918-e09d75222e6c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Climb"",
                    ""type"": ""Button"",
                    ""id"": ""2fa5cc7d-9677-4649-88d1-695865e8019e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LAttack"",
                    ""type"": ""Button"",
                    ""id"": ""25d0162b-c3b1-4113-8e51-8928c9e74620"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RAttack"",
                    ""type"": ""Button"",
                    ""id"": ""206ebc11-3526-4d70-9392-33453d4c7466"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Grab"",
                    ""type"": ""Button"",
                    ""id"": ""1779e35e-cdfe-4253-8a64-aad87fac9a50"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TakeOut"",
                    ""type"": ""Button"",
                    ""id"": ""4b914b10-3a79-4c71-8aeb-c6e36f125a25"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""113b744e-e80f-4950-be47-3ce2d447dcf1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Parry"",
                    ""type"": ""Button"",
                    ""id"": ""15007945-c042-48b0-b7fc-d2cdd603cb73"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EquipWP"",
                    ""type"": ""Button"",
                    ""id"": ""3defcaec-03a7-4122-9c72-98341bce3828"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""wasd"",
                    ""id"": ""fadc26c0-b598-48c4-a2ed-d9a1cd93beb5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""254ae6ad-77e0-4e7b-beff-b115bd111a66"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5a544a5c-f698-4122-a35d-7eb977e76d93"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""64858f6c-cb47-4640-a577-651f637d5bf7"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""af4294df-2ec0-45e0-9b6f-889c2ac600d6"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""eec0b46b-06fc-4a53-bb59-198bdda13ece"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0.15,y=0.15)"",
                    ""groups"": """",
                    ""action"": ""CameraLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""631bcf74-49d6-4e72-bc15-f140ceddfe68"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d6c60285-2625-420c-bff5-91d68846df33"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Climb"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f501986-49e2-4367-9c9d-20116b1e2075"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c22b51d-c662-4205-8ec1-82a4ae5793de"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fbbe2152-8f5b-45bd-bcf7-de640e48a504"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""44ebe68e-dbd6-4bac-9779-61dcb2e81e1f"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TakeOut"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fc2edcbb-719e-4f49-aa55-0548240d0d4e"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fb443539-de40-45f3-80e8-316c3b031591"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Parry"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""da316c71-d3d2-4eac-a822-01e1e1100d2e"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EquipWP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // GameInput
        m_GameInput = asset.FindActionMap("GameInput", throwIfNotFound: true);
        m_GameInput_Movement = m_GameInput.FindAction("Movement", throwIfNotFound: true);
        m_GameInput_CameraLook = m_GameInput.FindAction("CameraLook", throwIfNotFound: true);
        m_GameInput_Run = m_GameInput.FindAction("Run", throwIfNotFound: true);
        m_GameInput_Climb = m_GameInput.FindAction("Climb", throwIfNotFound: true);
        m_GameInput_LAttack = m_GameInput.FindAction("LAttack", throwIfNotFound: true);
        m_GameInput_RAttack = m_GameInput.FindAction("RAttack", throwIfNotFound: true);
        m_GameInput_Grab = m_GameInput.FindAction("Grab", throwIfNotFound: true);
        m_GameInput_TakeOut = m_GameInput.FindAction("TakeOut", throwIfNotFound: true);
        m_GameInput_Dash = m_GameInput.FindAction("Dash", throwIfNotFound: true);
        m_GameInput_Parry = m_GameInput.FindAction("Parry", throwIfNotFound: true);
        m_GameInput_EquipWP = m_GameInput.FindAction("EquipWP", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // GameInput
    private readonly InputActionMap m_GameInput;
    private IGameInputActions m_GameInputActionsCallbackInterface;
    private readonly InputAction m_GameInput_Movement;
    private readonly InputAction m_GameInput_CameraLook;
    private readonly InputAction m_GameInput_Run;
    private readonly InputAction m_GameInput_Climb;
    private readonly InputAction m_GameInput_LAttack;
    private readonly InputAction m_GameInput_RAttack;
    private readonly InputAction m_GameInput_Grab;
    private readonly InputAction m_GameInput_TakeOut;
    private readonly InputAction m_GameInput_Dash;
    private readonly InputAction m_GameInput_Parry;
    private readonly InputAction m_GameInput_EquipWP;
    public struct GameInputActions
    {
        private @InputActions m_Wrapper;
        public GameInputActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_GameInput_Movement;
        public InputAction @CameraLook => m_Wrapper.m_GameInput_CameraLook;
        public InputAction @Run => m_Wrapper.m_GameInput_Run;
        public InputAction @Climb => m_Wrapper.m_GameInput_Climb;
        public InputAction @LAttack => m_Wrapper.m_GameInput_LAttack;
        public InputAction @RAttack => m_Wrapper.m_GameInput_RAttack;
        public InputAction @Grab => m_Wrapper.m_GameInput_Grab;
        public InputAction @TakeOut => m_Wrapper.m_GameInput_TakeOut;
        public InputAction @Dash => m_Wrapper.m_GameInput_Dash;
        public InputAction @Parry => m_Wrapper.m_GameInput_Parry;
        public InputAction @EquipWP => m_Wrapper.m_GameInput_EquipWP;
        public InputActionMap Get() { return m_Wrapper.m_GameInput; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameInputActions set) { return set.Get(); }
        public void SetCallbacks(IGameInputActions instance)
        {
            if (m_Wrapper.m_GameInputActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnMovement;
                @CameraLook.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnCameraLook;
                @CameraLook.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnCameraLook;
                @CameraLook.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnCameraLook;
                @Run.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnRun;
                @Run.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnRun;
                @Run.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnRun;
                @Climb.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnClimb;
                @Climb.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnClimb;
                @Climb.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnClimb;
                @LAttack.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnLAttack;
                @LAttack.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnLAttack;
                @LAttack.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnLAttack;
                @RAttack.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnRAttack;
                @RAttack.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnRAttack;
                @RAttack.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnRAttack;
                @Grab.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnGrab;
                @Grab.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnGrab;
                @Grab.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnGrab;
                @TakeOut.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnTakeOut;
                @TakeOut.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnTakeOut;
                @TakeOut.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnTakeOut;
                @Dash.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnDash;
                @Parry.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnParry;
                @Parry.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnParry;
                @Parry.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnParry;
                @EquipWP.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnEquipWP;
                @EquipWP.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnEquipWP;
                @EquipWP.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnEquipWP;
            }
            m_Wrapper.m_GameInputActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @CameraLook.started += instance.OnCameraLook;
                @CameraLook.performed += instance.OnCameraLook;
                @CameraLook.canceled += instance.OnCameraLook;
                @Run.started += instance.OnRun;
                @Run.performed += instance.OnRun;
                @Run.canceled += instance.OnRun;
                @Climb.started += instance.OnClimb;
                @Climb.performed += instance.OnClimb;
                @Climb.canceled += instance.OnClimb;
                @LAttack.started += instance.OnLAttack;
                @LAttack.performed += instance.OnLAttack;
                @LAttack.canceled += instance.OnLAttack;
                @RAttack.started += instance.OnRAttack;
                @RAttack.performed += instance.OnRAttack;
                @RAttack.canceled += instance.OnRAttack;
                @Grab.started += instance.OnGrab;
                @Grab.performed += instance.OnGrab;
                @Grab.canceled += instance.OnGrab;
                @TakeOut.started += instance.OnTakeOut;
                @TakeOut.performed += instance.OnTakeOut;
                @TakeOut.canceled += instance.OnTakeOut;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @Parry.started += instance.OnParry;
                @Parry.performed += instance.OnParry;
                @Parry.canceled += instance.OnParry;
                @EquipWP.started += instance.OnEquipWP;
                @EquipWP.performed += instance.OnEquipWP;
                @EquipWP.canceled += instance.OnEquipWP;
            }
        }
    }
    public GameInputActions @GameInput => new GameInputActions(this);
    public interface IGameInputActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnCameraLook(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnClimb(InputAction.CallbackContext context);
        void OnLAttack(InputAction.CallbackContext context);
        void OnRAttack(InputAction.CallbackContext context);
        void OnGrab(InputAction.CallbackContext context);
        void OnTakeOut(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnParry(InputAction.CallbackContext context);
        void OnEquipWP(InputAction.CallbackContext context);
    }
}

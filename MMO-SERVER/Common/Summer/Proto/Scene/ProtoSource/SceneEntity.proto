syntax = "proto3";
import "Common/ProtoSource/Common.proto";
import "Combat/ProtoSource/Skill.proto";
import "Combat/ProtoSource/Buff.proto";
import "Game/ProtoSource/Backpack.proto";
package HS.Protobuf.SceneEntity;

message NetTransform{
	HS.Protobuf.Common.NetVector3 position = 1;
	HS.Protobuf.Common.NetVector3 rotation = 2;
	HS.Protobuf.Common.NetVector3 scale = 3;
}

enum SceneEntityType{
	SCENE_ENTITY_TYPE_NONE = 0;
	SCENE_ENTITY_TYPE_ACTOR = 1;
	SCENE_ENTITY_TYPE_ITEM = 2;
	SCENE_ENTITY_TYPE_INTERACTIVO = 3;
}

// Actor
enum NetActorType{
    NET_ACTOR_TYPE_CHARACTER = 0;
    NET_ACTOR_TYPE_MONSTER = 1;
    NET_ACTOR_TYPE_NPC = 2;
}
enum NetActorMode {
    NET_ACTOR_MODE_NONE				= 0;
    NET_ACTOR_MODE_NORMAL			= 1;
	NET_ACTOR_MODE_NORMAL_EQUIP		= 2;
    NET_ACTOR_MODE_FLY				= 3;
    NET_ACTOR_MODE_FLY_EQUIP		= 4;
	NET_ACTOR_MODE_MOUNTED			= 5;
	NET_ACTOR_MODE_MOUNTED_EQUIP	= 6;
	NET_ACTOR_MODE_SWIMMING			= 7;
}
enum NetActorState {
    NET_ACTOR_STATE_NONE		= 0;
    NET_ACTOR_STATE_IDLE		= 1;
    NET_ACTOR_STATE_MOTION		= 2;
    NET_ACTOR_STATE_JUMPUP		= 3;
    NET_ACTOR_STATE_FALLING		= 4;
    NET_ACTOR_STATE_CROUCH		= 5;
    NET_ACTOR_STATE_PRONE		= 6;
    NET_ACTOR_STATE_HURT		= 7;
    NET_ACTOR_STATE_DIZZY		= 8;
    NET_ACTOR_STATE_KNOCK		= 9;
    NET_ACTOR_STATE_DEATH		= 10;
    NET_ACTOR_STATE_DEFENSE		= 11;  
    NET_ACTOR_STATE_EVADE		= 12;  
    NET_ACTOR_STATE_SKILL		= 13;  
    NET_ACTOR_STATE_CUSTOM		= 14;	// 自定义状态
    NET_ACTOR_STATE_CHANGEHIGHT = 15;  
}
enum NetActorSmallState {
    NET_ACTOR_SMALL_STATE_NONE = 0;

    NET_ACTOR_STATE_SAMLL_MOTION_SLOW_WALK = 1;
    NET_ACTOR_STATE_SAMLL_MOTION_NORMAL_WALK = 2;
    NET_ACTOR_STATE_SAMLL_MOTION_RUN = 3;
    NET_ACTOR_STATE_SAMLL_MOTION_RUN_STOP = 4;
    NET_ACTOR_STATE_SAMLL_MOTION_NORMAL_WALK_STOP = 5;

    NET_ACTOR_STATE_SAMLL_JUMP_UP = 6;

    NET_ACTOR_STATE_SAMLL_FALLING_SUSTAINED = 7;
    NET_ACTOR_STATE_SAMLL_FALLING_END = 8;

    NET_ACTOR_STATE_SAMLL_CROUCH_SUSTAINED = 9;
    NET_ACTOR_STATE_SAMLL_CROUCH_MOVE = 10;

    NET_ACTOR_STATE_SAMLL_PRONE_SUSTAINED = 11;
    NET_ACTOR_STATE_SAMLL_PRONE_MOVE = 12;

    NET_ACTOR_STATE_SAMLL_DEATH_SUSTAINED = 13;
    NET_ACTOR_STATE_SAMLL_DEATH_UP = 14;

    NET_ACTOR_STATE_SAMLL_HIT_UP = 15;
    NET_ACTOR_STATE_SAMLL_HIT_DOWN = 16;
    NET_ACTOR_STATE_SAMLL_HIT_LEFT = 17;
    NET_ACTOR_STATE_SAMLL_HIT_RIGHT = 18;
    NET_ACTOR_STATE_SAMLL_HIT_FRONT = 19;
    NET_ACTOR_STATE_SAMLL_HIT_BACK = 20;

    NET_ACTOR_STATE_SAMLL_DIZZY_SUSTAINED = 21;

    NET_ACTOR_STATE_SAMLL_KNOCK_BACK = 22;
    NET_ACTOR_STATE_SAMLL_KNOCK_UP = 23;
}
message NetActorNode {
    int32 entityId = 1;
    NetTransform transform = 2;

    int32 professionId = 3;
    string actorName = 4;
    int32 level = 5;
    int64 exp = 6;
    int32 sceneId = 7; 

    int32 hp = 8;
    int32 mp = 9;
    int32 maxHp = 10;
    int32 maxMp = 11;
    int32 speed = 12;

	NetActorType netActorType = 13;
	NetActorMode netActorMode = 14;
    NetActorState netActorState = 15;
    NetActorSmallState netActorSmallState = 16;

	HS.Protobuf.Combat.Skill.FixedSkillGroupInfo fixedSkillGroupInfo = 18;
    repeated HS.Protobuf.Game.Backpack.ItemInfo wornEquipments = 19;
    repeated HS.Protobuf.Combat.Buff.BuffInfo buffs = 20;
}

// Item
message NetItemNode{
	int32 entityId = 1;
	int32 sceneId  = 2;
	NetTransform transform = 3;

	HS.Protobuf.Game.Backpack.NetItemDataNode netItemDataNode = 4;
}


// =======================================无用
//entity位置信息
message NetEntity {
	int32 id = 1;
	HS.Protobuf.Common.NetVector3 position = 2;
	HS.Protobuf.Common.NetVector3 direction = 3;
}

//活动单位的模式
enum ActorMode{
	FREE = 0;		//自由进行任何操作
	DEAD = 1;		//死亡，无法操作。
	REST = 2;		//休息，挂机 回血回蓝(可以坐下的时候触发)
	FIGHT = 3;		//战斗状态，持续一段时间，期间可能无法骑马吧。
}
//活动单位的行为
enum ActorCombatMode{
    Stand = 0;
	Equip = 1;
	SwordFlight = 2;
}
enum ActorState{
    AirDown = 0;
	Death = 1;
	Defense = 2;
	Dizzy = 3;
	Evade = 4;
	Hurt = 5;
	Idle = 6;
	JumpUp = 7;
	Move = 8;
	Skill = 9;
	Constant = 10;
}

//actor类型
enum ActorType
{
    Character=0;
    Monster=1;
    NPC=2;
}

//actor信息
message NetActor{
	int32 id = 1;
	int32 tid = 2;
	NetEntity entity = 3;
	string name = 4;
	int32 level = 5;
	int64 exp = 6;
	int32 spaceId = 7; 
	int64 gold = 8;
	float hp=9;
	float mp=10;
	ActorType actorType = 11; 
	repeated HS.Protobuf.Combat.Skill.SkillInfo skills = 12;		//技能列表
	repeated HS.Protobuf.Game.Backpack.ItemInfo equipList = 13;	 	//穿戴装备
	float hpMax = 14;
	float mpMax = 15;
	int32 speed = 16;
	repeated HS.Protobuf.Combat.Buff.BuffInfo buffsList = 17;		//actor的buff
}

//actor属性更新消息类型
message PropertyUpdate{
	//属性类型枚举
	enum Prop{
		HP = 0;		
		MP = 1;
		HPMax = 2;
		MPMax = 3;
		Mode = 4;
		Level = 5;
		Name = 6;
		Golds = 7;
		Exp = 8;		//经验
		Energy = 9;		//活力
		Speed = 10;
		CombatMode = 11;
		
		//幸运、罪恶、技能点
	}

	//为了可以存放不同的类型的数据
	message PropertyValue{
		oneof value{
			int32 int_value = 1;
			float float_value = 2;
			string string_value = 3;
			ActorMode mode_value = 4;
			int64 long_value = 5;
			ActorCombatMode combatMode_value = 6;
		}
	}

	int32 entity_id = 1;
	Prop property = 2;
	PropertyValue oldValue = 3;
	PropertyValue newValue = 4;
}

// Net itemEntity信息
message NetEItem{
	HS.Protobuf.Game.Backpack.ItemInfo ItemInfo = 1;
	int32 spaceId = 2;
	NetEntity entity = 3;
}
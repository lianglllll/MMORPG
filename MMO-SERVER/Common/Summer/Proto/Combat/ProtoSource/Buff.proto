syntax = "proto3";
package HS.Protobuf.Combat.Buff;

enum BuffProtocol{
	BUFF_PROTOCOL_NONE = 0;
	BUFF_PROTOCOL_BUFF_OPERATION_RESP = 42001;		// [BuffOperationResponse]
}


enum BuffType{
	Buff = 0;
	Debuff = 1;
}
enum BuffConflict{ 
	Combine = 0;		// 合并为一个buff，叠层(提升等级)
	Separate = 1;		// 独立存在
	Cover = 2;			// 覆盖，后者覆盖前者
}
message BuffInfo{
	int32 id = 1;	// 实例id,因为同一个buff可能有很多个，需要区分
	int32 bid = 2;
	int32 ownerId = 3;
	int32 providerId = 4;
	int32 currentLevel = 5;		// 当前等级
	float ResidualDuration = 6;	// 当前剩余时间
}

enum BuffOperationType {
  BUFF_OPERATION_ADD			= 0;	// 添加Buff
  BUFF_OPERATION_REMOVE			= 1;	// 移除Buff
  BUFF_OPERATION_UPDATE			= 2;	// 更新Buff
  BUFF_OPERATION_REMOVEE_ALL	= 3;	// 移除全部Buff
  
}
message BuffOperationResponse {
	string sessionId = 1;
	int32 sceneId  = 2;
	BuffOperationType operation_type = 3;		// 操作类型
	oneof payload {
		BuffInfo buffInfo = 4;						
		int32 removeInstanceIds = 5;
	}
}

// ===================丢弃===================
//buff添加响应
message BuffsAddResponse{
	repeated BuffInfo list = 1;
}
//buff移除响应
message BuffsRemoveResponse{
	repeated BuffInfo list = 1;
}
//buff更新响应
message BuffsUpdateResponse{
	repeated BuffInfo list = 1;
}
syntax = "proto3";
package HS.Protobuf.Common;

enum CommonProtocl{
	COMMON_PROTOCL_NONE = 0;
	COMMON_PROTOCL_CS_HEARTBEAT_REQ							= 1001;
	COMMON_PROTOCL_CS_HEARTBEAT_RESP						= 1002;
	COMMON_PROTOCL_SS_HEARTBEAT_REQ							= 1003;
	COMMON_PROTOCL_SS_HEARTBEAT_RESP						= 1004;
	COMMON_PROTOCL_EXCHANGE_PUBLIC_KEY_REQ					= 1005;
	COMMON_PROTOCL_EXCHANGE_PUBLIC_KEY_RESP					= 1006;
	COMMON_PROTOCL_Exchange_COMMUNICATION_SECRET_KEY_REQ	= 1007;
	COMMON_PROTOCL_Exchange_COMMUNICATION_SECRET_KEY_RESP	= 1008;
}

enum SERVER_TYPE{
	SERVER_TYPE_NONE			= 0;
	SERVER_TYPE_CONTROLCENTER	= 1;
	SERVER_TYPE_LOGIN			= 2;
	SERVER_TYPE_LOGINGATE		= 3;
	SERVER_TYPE_LOGINGATEMGR	= 4;
	SERVER_TYPE_GAME			= 5;
	SERVER_TYPE_GAMEGATE		= 6;
	SERVER_TYPE_GAMEGATEMGR		= 7;
	SERVER_TYPE_SCENE			= 8;
	SERVER_TYPE_DBPROXY			= 9;
	SERVER_TYPE_MASTERTIME		= 10;
	SERVER_TYPE_SLAVETIME		= 11;
	// 关于pb区域号划分
	// login:	20000	login/longinGate/loginGateMgr
	// game:	30000	3背包/4聊天/5任务/6商店/7好友/8邮件/9排行榜/公会/活动
	// scene:	40000	场景/副本/战斗skill buff   
	// DB:		50000	mongodb/redis
	// time:	60000	
}
message ServerInfoNode{
	int32 serverId			= 1;
	SERVER_TYPE serverType	= 2;
	string ip				= 3;
	int32 port				= 4;
	int32 eventBitmap		= 5;
	oneof payload{   
		ControlCenterServerInfoNode controlCenterInfo		= 6;
		LoginServerInfoNode loginServerInfo					= 7;
		LoginGateServerInfoNode loginGateServerInfo			= 8;
		LoginGateMgrServerInfoNode loginGateMgrServerInfo	= 9;
		GameServerInfoNode gameServerInfo					= 10;
		GameGateServerInfoNode gameGateServerInfo			= 11;
		GameGateMgrServerInfoNode gameGateMgrServerInfo		= 12;
		SceneServerInfoNode sceneServerInfo					= 13;
		DBProxyServerInfoNode dbProxyServerInfo				= 14;
		MasterTimeServerInfoNode masterTimeServerInfo		= 15;
		SlaveTimeServerInfoNode slaveTimeServerInfo			= 16;
	}
	// 地理信息字段
    double geo_latitude = 20;
    double geo_longitude = 21;
    
    // 服务器权重（用于加权策略）
    int32 weight = 22;
}

message ControlCenterServerInfoNode{
}
message LoginServerInfoNode{
}
message LoginGateServerInfoNode{
	int32 targetLoginServerId = 1;
}
message LoginGateMgrServerInfoNode{
}
message GameServerInfoNode{
	int32 gameWorldId = 1;
}
message GameGateServerInfoNode{
	int32 userPort = 1;
}
message GameGateMgrServerInfoNode{
}
message SceneServerInfoNode{
	int32 sceneId = 1;
}
message DBProxyServerInfoNode{
}
message MasterTimeServerInfoNode{
}
message SlaveTimeServerInfoNode{
}


enum GateCommand{
	GATE_COMMAND_NONE = 0;
	GATE_COMMAND_START = 1;
	GATE_COMMAND_STOP = 2;
	GATE_COMMAND_RESUME = 3;
	GATE_COMMAND_END = 4;
}

enum ServerStatus {
    SERVER_STATUS_ACTIVE = 0;   // 工作中
    SERVER_STATUS_PAUSED = 1;   // 暂停
    SERVER_STATUS_INACTIVE = 2; // 非工作状态
}


//============================================Transform==========================================

// 网络三维向量


message NetVector3{
	int32 x = 1; //这里的数值是unity中数值*1000得到的整数值
	int32 y = 2;
	int32 z = 3;
}

//============================================心跳检测==========================================
message CSHeartBeatRequest{

}
message CSHeartBeatResponse{

}
message SSHeartBeatRequest{

}
message SSHeartBeatResponse{

}


// ============================================安全相关==========================================
message ExchangePublicKeyRequest{
	string clientPublicKey = 1;
}
message ExchangePublicKeyResponse{
	string serverPublilcKey = 1;
}

message ExchangeCommunicationSecretKeyRequest{
	string key1 = 1;
	string key2 = 2;
}
message ExchangeCommunicationSecretKeyResponse{
	int32 resultCode = 1;
	int32 resulMsg = 2;
}

// ===============================================属性===============================================
message NetAttrubuteDataNode{
	int32 Speed		= 1;
	int32 MaxHP		= 2;
	int32 MaxMP		= 3;
	int32 AD		= 4;
	int32 AP		= 5;
	int32 DEF		= 6;
	int32 MDEF		= 7;
	float CRI		= 8;
	float CRD		= 9;
	float HitRate	= 10;
	float DodgeRate = 11;
	int32 HpRegen	= 12;
	float HpSteal	= 13;
	int32 STR		= 14;
	int32 INT		= 15;
	int32 AGI		= 16;
}
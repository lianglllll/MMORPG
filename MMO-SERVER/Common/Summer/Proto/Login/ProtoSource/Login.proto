syntax = "proto3";
import "Common/ProtoSource/Common.proto";
package HS.Protobuf.Login;

enum LoginProtocl{
	LOGIN_PROTOCL_NONE = 0;
	LOGIN_PROTOCL_GET_LOGIN_TOKEN_REQ = 20001;		// [GetLoginTokenRequest]
	LOGIN_PROTOCL_GET_LOGIN_TOKEN_RESP = 20002;		// [GetLoginTokenResponse]
	LOGIN_PROTOCL_USER_REGISTER_REQ = 20003;		// [UserRegisterRequest]
	LOGIN_PROTOCL_USER_REGISTER_RESP = 20004;		// [UserRegisterResponse]
	LOGIN_PROTOCL_USER_LOGIN_REQ = 20005;			// [UserLoginRequest]
	LOGIN_PROTOCL_USER_LOGIN_RESP = 20006;			// [UserLoginResponse]
	LOGIN_PROTOCL_GET_ALL_WORLD_INFO_NODE_REQ = 20007;		// [GetAllWorldInfosRequest]
	LOGIN_PROTOCL_GET_ALL_WORLD_INFO_NODE_RESP = 20008;		// [GetAllWorldInfosResponse]
	LOGIN_PROTOCL_GET_GAME_GATE_BY_WORLDID_REQ = 20009;		// [GetGameGateByWorldIdRequest]
	LOGIN_PROTOCL_GET_GAME_GATE_BY_WORLDID_RESP = 20010;    // [GetGameGateByWorldIdResponse]
}

enum WORLD_LOAD_STATUS{
	WORLD_LOAD_STATUS_IDLE = 0;
	WORLD_LOAD_STATUS_CONGESTED = 1;
	WORLD_LOAD_STATUS_OVERLOADED = 2;
	WORLD_LOAD_STATUS_OFFLINE = 3;
}
message WorldInfoNode{
	int32 worldId = 1;
	string worldName = 2;
	string worldDesc = 3;
	WORLD_LOAD_STATUS status = 4;
}

message GetLoginTokenRequest{
}
message GetLoginTokenResponse{
	string loginToken = 1;
}

message UserRegisterRequest{
	string loginGateToken = 1;
	string loginToken = 2;
	string username = 3;
	string password = 4;
}
message UserRegisterResponse{
	string loginGateToken = 1;
	string loginToken = 2;
	int32 resultCode = 3;
	string resultMsg = 4;
}

message UserLoginRequest{
	string loginGateToken = 1;
	string loginToken = 2;
	string username = 3;
	string password = 4;
}
message UserLoginResponse{
	string loginGateToken = 1;
	string loginToken = 2;
	int32 resultCode = 3;
	string resultMsg = 4;
	string sessionId = 5;
}

message GetAllWorldInfosRequest{
	string loginGateToken = 1;
	string loginToken = 2;
}
message GetAllWorldInfosResponse{
	string loginGateToken = 1;
	string loginToken = 2;
	repeated WorldInfoNode worldInfoNodes = 3;
}

message GetGameGateByWorldIdRequest{
	string loginGateToken = 1;
	string loginToken = 2;
	int32 worldId = 3;
	string sessionId = 4;
}
message GetGameGateByWorldIdResponse{
	string loginGateToken = 1;
	string loginToken = 2;
	int32 resultCode = 3;
	string resultMsg = 4;
	repeated HS.Protobuf.Common.ServerInfoNode gameGateInfos = 5;
}




message ReconnectRequest{
	string sessionId = 1;
}
message  ReconnectResponse{
	bool success = 1;
	int32 entityId = 2;//重连的角色，0代表为选择角色
}

//退出游戏
message ExitRequest{

}
message ExitResponse{

}

//重新选择角色


//重新登录





//============================================公告==========================================
message KillRankingListItem{
	string chrName = 1;
	int64 killCount = 2;
}

message ServerInfoRequest{
	
}

message ServerInfoResponse{
	int32 OnlinePlayerCount = 1;
	int32 UserCount = 2;
	repeated KillRankingListItem killRankingList = 3;
}
syntax = "proto3";
import "Common/ProtoSource/Common.proto";
import "Scene/ProtoSource/SceneEntity.proto";
package HS.Protobuf.Game;

enum GameProtocl{
	GAME_PROTOCL_NONE = 0;
	GAME_PROTOCL_REGISTER_TO_G_REQ			= 30001;
	GAME_PROTOCL_REGISTER_TO_G_RESP			= 30002;
	GAME_PROTOCL_GET_CHARACTER_LIST_REQ		= 30005;	// [GetCharacterListRequest]
	GAME_PROTOCL_GET_CHARACTER_LIST_RESP	= 30006;	// [GetCharacterListResponse]
	GAME_PROTOCL_CREATE_CHARACTER_REQ		= 30007;	// [CreateCharacterRequest]
	GAME_PROTOCL_CREATE_CHARACTER_RESP		= 30008;	// [CreateCharacterResponse]
	GAME_PROTOCL_DELETE_CHARACTER_REQ		= 30009;	// [DeleteCharacterRequest]
	GAME_PROTOCL_DELETE_CHARACTER_RESP		= 30010;	// [DeleteCharacterResponse]
	GAME_PROTOCL_ENTER_GAME_REQ				= 30011;	// [EnterGameRequest]
	GAME_PROTOCL_ENTER_GAME_RESP			= 30012;	// [EnterGameResponse]
	GAME_PROTOCL_EXIT_GAME_REQ				= 30013;	// [ExitGameRequest]
}

message SimpleCharacterInfoNode{
	string cId = 1;
	string chrName = 2;
	int32 professionId = 3;
	int32 level = 4;
}

message RegisterToGRequest{
	HS.Protobuf.Common.ServerInfoNode serverInfoNode = 1;
}
message RegisterToGResponse{
	int32  resultCode		= 1;	//0 成功 小于0正常流程  大于0异常流程
	string resultMsg		= 2;
	repeated HS.Protobuf.Common.ServerInfoNode sceneInfoNodes = 3;
	int32 AllocateSceneId = 4;
	string gameToken = 5;
}

message GetCharacterListRequest{
	string sessionId = 1;
	string gameToken = 2;
	string uId = 3;
}
message GetCharacterListResponse{
	string sessionId = 1;
	int32 resultCode = 2;
	string resultMsg  = 3;
	repeated SimpleCharacterInfoNode characterNodes = 4;
}

message CreateCharacterRequest{
	string sessionId = 1;
	string gameToken = 2;
	string uId = 3;

	string cName = 4;
	int32 professionId = 5;
}
message CreateCharacterResponse{
	string sessionId = 1;
	int32 resultCode = 2;
	string resultMsg = 3;
	SimpleCharacterInfoNode characterNode = 4;
}

message DeleteCharacterRequest{
	string sessionId = 1;
	string gameToken = 2;
	string uId = 3;
	string password = 4;
	string cId = 5;
}
message DeleteCharacterResponse{
	string sessionId = 1;
	int32 resultCode = 2;
	string resultMsg = 3;
}

message EnterGameRequest{
	string sessionId = 1;
	string gameToken = 2;
	string characterId = 3;
}
message EnterGameResponse{
	string sessionId = 1;
	int32  resultCode = 2;
	string resultMsg = 3;
	string characterId = 4;
	HS.Protobuf.SceneEntity.NetActorNode selfNetActorNode	= 5;
	repeated HS.Protobuf.SceneEntity.NetActorNode otherNetActorNodeList	= 6;
	repeated HS.Protobuf.SceneEntity.NetItemNode  otherNetItemNodeList	= 7;
}

// gamegate用于发送客户端断开用的
message ExitGameRequest{
	string gameToken = 1;
	string characterId = 2;
}
syntax = "proto3";
package HS.Protobuf.Game.Backpack;

// 背包系统

// 物品类型
enum ItemType{
    Material=0;       //材料&道具
    Consumable=1;     //消耗品
    Equipment=2;      //武器&装备
}
// 品质
enum Quality {
    Common=0;     // 普通
    Fine=1;   	  // 非凡
    Rare=2;       // 稀有
    Epic=3;       // 史诗
    Legendary=4;  // 传说
    Artifact=5;   // 神器
}
// 装备类型
enum EquipsType{
	UNSET = 0;      	//无
    Weapon = 1;    		//武器
	SecondaryWeapon = 2;//副武器
	Helmet = 3;			//头盔
    Neck = 4;      		//项链
    Chest = 5;     		//胸甲
	Wristband = 6;		//护腕
    Belt = 7;      		//腰带
    Bracelet = 8;		//手镯
	Legs = 9;      		//裤子
    Ring = 10;      	//戒指
    Boots = 11;     	//鞋子
    Wings = 12;    		//翅膀
}
// 物品信息
message ItemInfo{
	int32 itemId = 1;			//物品id
	int32 amount = 2;			//物品数量
	int32 position = 3;			//物品所处位置,在哪个格子
	EquipData equipdata = 4; 	//装备信息，物品有这个属性，说明是武器。
}
// 装备数据
message EquipData{
	//打孔、镶嵌、强化
}

// 场景中物品更新响应包
message ItemUpdate{
	enum UpdateType{
		ADD = 0;
		DELETE = 1;
		UPDATE = 2;
	}
	UpdateType type = 1;
	ItemInfo itme = 2;
}

// 获取角色的Inventory信息请求
// 这样设计可以自由定制想查询什么就置为true
message InventoryInfoRequest{
	int32 entityId = 1; 
	bool queryKnapsack = 2;
	bool queryWarehouse = 3;
	bool queryEquipment = 4;
}
// 获取角色的Inventory信息响应
message InventoryInfoResponse{
	int32 entityId = 1;
	InventoryInfo KnapsackInfo = 2;
	InventoryInfo WarehouseInfo = 3;
	InventoryInfo EquipmentInfo = 4;
}
// 仓库类型
enum InventoryType{
	Knapsack = 0;
	Warehouse = 1;
	EquipmentColumn = 2;
	CurrentScene = 3;
}
// 库存对象信息:背包/仓库
message InventoryInfo{
	int32 capacity = 1;//格子数量
	repeated ItemInfo list = 2;
}

// 背包物品放置请求
message ItemPlacementRequest{
	int32 entityId = 1;
	InventoryType originInventoryTpey = 2;
	int32 originIndex = 3;
	int32 targetIndex = 4;
}

// 使用物品请求
message ItemUseRequest{
	int32 entityId = 1;
	int32 slotIndex = 2;
	int32 count = 3;
}
message ItemUseResponse{
	bool result = 1;
	int32 slotIndex = 2;
	int32 count = 3;
}

// 物品丢弃
message ItemDiscardRequest{
	int32 slotIndex = 1;
	int32 number = 2;
	InventoryType type = 3;
}
message ItemDiscardResponse{
	int32  resultCode		= 1;
	string resultMsg		= 2;
	int32 itemId			= 3;
	int32 amount			= 4;

}
// 物品拾起
message ItemPickUpRequest{
	int32 entityId = 1;
}
message ItemPickupResponse{
	int32  resultCode		= 1;
	string resultMsg		= 2;
	int32 itemId			= 3;
	int32 amount			= 4;
}

// 拉取全部装备信息请求
message EquipsRequest{
}
message EquipsResponse{
	int32 entityId = 1;
	repeated ItemInfo equipsList = 2;
}

// 装备信息更新响应,变化的装备发送给各个客户端
message EquipsUpdateResponse{
	int32 entityId = 1;
	repeated ItemInfo equipsList = 2;
}

// 背包中的装备穿戴请求
message WearEquipmentRequest{
	int32 slotIndex = 1;
}
// 装备栏中的装备卸载请求
message UnloadEquipmentRequest{
	EquipsType type = 1;
}